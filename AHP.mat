clc
clear
close all;

load C:\Users\Asus\Desktop\AHP\p.mat p1 p2 p3 p4 p5 p6
load C:\Users\Asus\Desktop\AHP\D1.mat D

% Check for CR to be less than 0.1
CR(p1)
CR(p2)
CR(p3)
CR(p4)
CR(p5)
CR(p6)
CR(D)

%ND=Normalization(D);
w=eigen_vector_method(D);

M=[eigen_vector_method(p1),eigen_vector_method(p2),eigen_vector_method(p3),eigen_vector_method(p4),eigen_vector_method(p5),eigen_vector_method(p6)];

% function Normalized=Normalization(M)
% Normalized=zeros(size(M));
% sigma=sum(M,1);
% for i=1:size(M,1)
%     for j=1:size(M,2)
%         Normalized(i,j)=M(i,j)/sigma(j);
%     end
% end
% %Normalized=M./sum(M,1);
% end

function w=eigen_vector_method(D)
    [W,lambda]=eig(D);

    n=size(D,1);
    lambda_max=max(max(lambda));
    lambda_max=lambda_max*eye(n);
    A=D-lambda_max;

    % trick :)
    cl=ones(n,1);
    rw=[ones(1,n),0];
    A=[[A,cl];rw];

    b=inv(A);
    F=[zeros(n,1);1];
    X=b*F;
    n1=size(X);
    u=n1(1);
    w=X(1:u-1);
%     syms w1 w2 w3 a
%     eqn1 = x(1,1)*w1 + x(1,2)*w2 + x(1,3)*w3 +a== 0;
%     eqn2 = x(2,1)*w1 + x(2,2)*w2 + x(2,3)*w3 +a== 0;
%     eqn3 = x(3,1)*w1 + x(3,2)*w2 + x(3,3)*w3 +a== 0;
%     eqn4 = w1 + w2 + w3 +0*a== 1;
%     answer = solve([eqn1, eqn2, eqn3, eqn4], [w1, w2, w3, a]);
%     % w=بردار وزن ها 
%     w=[double(answer.w1);double(answer.w2);double(answer.w3)];
end

% function av=Row_mean(M)
% av=zeros(size(M,1),1);
% sigma=sum(M,2);
% for i=1:size(M,1)
%         av(i)=sigma(i)/size(M,2);
% end
% %AVR=sum(M,2)./size(M,2);
% end




function CR0 = CR(A)
    s=size(A);
    n=s(1);
    RI=[0,0,0.58,0.9,1.12,1.24,1.32,1.41,1.45,1.49,1.51,1.48,1.56,1.57,1.59];
    % RI is abbreviation of "Random Index" and is a pre-defined constant parameter for any given 'n'
    RI0=RI(n);
    [V,lambda]=eig(A);
    lambda_max=max(max(lambda));
    CI0=abs((lambda_max-n))/(n-1);
    % CI is abbreviation of "Consistancy Index"
    % Consistancy Ratio (CR) can be computed according to this formula: CR=CI/RI
    CR0=CI0/RI0;
end
